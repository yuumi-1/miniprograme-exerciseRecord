"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _jsx = require("../../../jsx");
var _default = exports.default = function _default(props) {
  var ticks = props.ticks,
    coord = props.coord,
    style = props.style;
  var top = coord.top,
    right = coord.right,
    bottom = coord.bottom;
  var grid = style.grid,
    tickLine = style.tickLine,
    line = style.line,
    labelOffset = style.labelOffset,
    label = style.label;
  return (0, _jsx.jsx)("group", null, grid ? ticks.map(function (tick) {
    var points = tick.points,
      gridStyle = tick.gridStyle;
    var start = points[0];
    var end = points[points.length - 1];
    return (0, _jsx.jsx)("line", {
      attrs: (0, _objectSpread2.default)((0, _objectSpread2.default)({
        x1: start.x,
        y1: start.y,
        x2: end.x,
        y2: end.y
      }, grid), gridStyle)
    });
  }) : null, tickLine && tickLine.length ? ticks.map(function (tick) {
    var points = tick.points;
    var end = points[points.length - 1];
    return (0, _jsx.jsx)("line", {
      attrs: (0, _objectSpread2.default)({
        x1: end.x,
        y1: end.y,
        x2: end.x + tickLine.length,
        y2: end.y
      }, tickLine)
    });
  }) : null, line ? (0, _jsx.jsx)("line", {
    attrs: (0, _objectSpread2.default)({
      x1: right,
      y1: top,
      x2: right,
      y2: bottom
    }, line)
  }) : null, label ? ticks.map(function (tick, _index) {
    var points = tick.points,
      text = tick.text,
      labelStyle = tick.labelStyle;
    var end = points[points.length - 1];
    return (0, _jsx.jsx)("text", {
      attrs: (0, _objectSpread2.default)((0, _objectSpread2.default)({
        x: end.x + labelOffset,
        y: end.y,
        textAlign: 'left',
        textBaseline: 'middle',
        text: text
      }, label), labelStyle)
    });
  }) : null);
};