"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));
var _jsx = require("../../jsx");
var _zoom = _interopRequireDefault(require("../zoom"));
var _default = exports.default = function _default(View) {
  return /*#__PURE__*/function (_Zoom) {
    (0, _inherits2.default)(ScrollBar, _Zoom);
    var _super = (0, _createSuper2.default)(ScrollBar);
    function ScrollBar() {
      (0, _classCallCheck2.default)(this, ScrollBar);
      return _super.apply(this, arguments);
    }
    (0, _createClass2.default)(ScrollBar, [{
      key: "willMount",
      value: function willMount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(ScrollBar.prototype), "willMount", this).call(this);
        var context = this.context,
          props = this.props;
        var visible = props.visible,
          _props$position = props.position,
          position = _props$position === void 0 ? 'bottom' : _props$position,
          _props$margin = props.margin,
          margin = _props$margin === void 0 ? '16px' : _props$margin,
          chart = props.chart;
        var marginNumber = context.px2hd(margin);
        if (visible === false) {
          return null;
        }
        chart.updateCoordFor(this, {
          position: position,
          width: position === 'left' || position === 'right' ? marginNumber : 0,
          height: position === 'bottom' || position === 'top' ? marginNumber : 0
        });
      }
    }, {
      key: "render",
      value: function render() {
        var props = this.props,
          state = this.state;
        var visible = props.visible;
        if (visible === false) {
          return null;
        }
        return (0, _jsx.jsx)(View, (0, _objectSpread2.default)((0, _objectSpread2.default)({
          position: "bottom"
        }, props), state));
      }
    }]);
    return ScrollBar;
  }(_zoom.default);
};