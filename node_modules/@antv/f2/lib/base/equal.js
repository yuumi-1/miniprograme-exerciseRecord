"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
var _util = require("@antv/util");
function objToString(obj) {
  return Object.prototype.toString.call(obj);
}
function objectKeys(obj) {
  return Object.keys(obj);
}
function equal(a, b) {
  if (a === b) return true;
  if ((0, _typeof2.default)(a) !== (0, _typeof2.default)(b)) {
    return false;
  }
  // null 和 undefined
  if (a == null || b == null) {
    return false;
  }
  // 特殊处理NaN
  if (Number.isNaN(a) && Number.isNaN(b)) {
    return true;
  }
  if (objToString(a) !== objToString(b)) {
    return false;
  }
  // 如果是function， 则认为是相对
  if ((0, _util.isFunction)(a)) {
    return true;
  }
  // 值类型，Number String Boolean
  if ((0, _typeof2.default)(a) !== 'object') {
    return false;
  }
  if ((0, _util.isArray)(a)) {
    if (a.length !== b.length) {
      return false;
    }
    for (var i = a.length - 1; i >= 0; i--) {
      if (!equal(a[i], b[i])) {
        return false;
      }
    }
    return true;
  }
  if (!(0, _util.isPlainObject)(a)) {
    return false;
  }
  var ka = objectKeys(a);
  var kb = objectKeys(b);
  // having the same number of owned properties (keys incorporates hasOwnProperty)
  if (ka.length !== kb.length) {
    return false;
  }
  // the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  // ~~~cheap key test
  for (var _i = ka.length - 1; _i >= 0; _i--) {
    if (ka[_i] != kb[_i]) {
      return false;
    }
  }
  // equivalent values for every corresponding key, and ~~~possibly expensive deep test
  for (var _i2 = ka.length - 1; _i2 >= 0; _i2--) {
    var key = ka[_i2];
    if (!equal(a[key], b[key])) {
      return false;
    }
  }
  return true;
}
var _default = exports.default = equal;