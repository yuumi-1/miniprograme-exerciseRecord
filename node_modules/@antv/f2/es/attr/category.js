import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import { Category as CategoryScale } from '@antv/scale';
import Base from './base';
var Category = /*#__PURE__*/function (_Base) {
  _inherits(Category, _Base);
  var _super = _createSuper(Category);
  function Category() {
    _classCallCheck(this, Category);
    return _super.apply(this, arguments);
  }
  _createClass(Category, [{
    key: "createScale",
    value: function createScale(scaleConfig) {
      return new CategoryScale(scaleConfig);
    }
  }, {
    key: "_mapping",
    value: function _mapping(value) {
      var scale = this.scale,
        range = this.range;
      if (scale.type === 'cat') {
        var _index = scale.translate(value);
        return range[_index % range.length];
      }
      var normalizeValue = scale.scale(value);
      var index = Math.round(normalizeValue * (range.length - 1));
      return range[index];
    }
  }]);
  return Category;
}(Base);
export default Category;