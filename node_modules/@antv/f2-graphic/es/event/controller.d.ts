/// <reference types="node" />
import Canvas from '../engine/canvas';
import { Point } from '../types';
declare class EventController {
    processEvent: {
        [eventType: string]: boolean;
    };
    canvas: Canvas;
    startTime: number;
    endTime: number;
    startPoints: Point[];
    startDistance: number;
    center: Point;
    pressTimeout: NodeJS.Timeout;
    eventType: string;
    direction: 'none' | 'left' | 'right' | 'down' | 'up';
    lastMoveTime: number;
    prevMovePoints: Point[];
    prevMoveTime: number;
    lastMovePoints: Point[];
    pinch: boolean;
    constructor({ canvas, el }: {
        canvas: any;
        el: any;
    });
    delegateEvent(canvasEl: any): void;
    emitEvent(type: any, ev: any): void;
    _click: (ev: any) => void;
    _start: (ev: any) => void;
    _move: (ev: any) => void;
    _end: (ev: any) => void;
    _cancel: (ev: any) => void;
    getEventType(points: any): any;
    enable(eventType: any): void;
    isProcess(eventType: any): boolean;
    emitStart(type: any, ev: any): void;
    emitEnd(ev: any): void;
    clearPressTimeout(): void;
    reset(): void;
}
export default EventController;
