import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _get from "@babel/runtime/helpers/esm/get";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import Shape from './shape';
import { getBBoxFromLine } from '../../util/bbox';
var Line = /*#__PURE__*/function (_Shape) {
  _inherits(Line, _Shape);
  var _super = _createSuper(Line);
  function Line() {
    _classCallCheck(this, Line);
    return _super.apply(this, arguments);
  }
  _createClass(Line, [{
    key: "_initProperties",
    value: function _initProperties() {
      _get(_getPrototypeOf(Line.prototype), "_initProperties", this).call(this);
      this._attrs.canStroke = true;
      this._attrs.type = 'line';
    }
  }, {
    key: "getDefaultAttrs",
    value: function getDefaultAttrs() {
      return {
        x1: 0,
        y1: 0,
        x2: 0,
        y2: 0,
        lineWidth: 1
      };
    }
  }, {
    key: "createPath",
    value: function createPath(context) {
      var attrs = this.get('attrs');
      var x1 = attrs.x1,
        y1 = attrs.y1,
        x2 = attrs.x2,
        y2 = attrs.y2;
      context.beginPath();
      context.moveTo(x1, y1);
      context.lineTo(x2, y2);
    }
  }, {
    key: "calculateBox",
    value: function calculateBox() {
      var attrs = this.get('attrs');
      var x1 = attrs.x1,
        y1 = attrs.y1,
        x2 = attrs.x2,
        y2 = attrs.y2,
        lineWidth = attrs.lineWidth;
      return getBBoxFromLine(x1, y1, x2, y2, lineWidth);
    }
  }]);
  return Line;
}(Shape);
export default Line;