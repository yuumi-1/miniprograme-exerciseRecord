import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _get from "@babel/runtime/helpers/esm/get";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import Shape from './shape';
var Circle = /*#__PURE__*/function (_Shape) {
  _inherits(Circle, _Shape);
  var _super = _createSuper(Circle);
  function Circle() {
    _classCallCheck(this, Circle);
    return _super.apply(this, arguments);
  }
  _createClass(Circle, [{
    key: "_initProperties",
    value: function _initProperties() {
      _get(_getPrototypeOf(Circle.prototype), "_initProperties", this).call(this);
      this._attrs.canFill = true;
      this._attrs.canStroke = true;
      this._attrs.type = 'circle';
    }
  }, {
    key: "getDefaultAttrs",
    value: function getDefaultAttrs() {
      return {
        x: 0,
        y: 0,
        r: 0,
        lineWidth: 0
      };
    }
  }, {
    key: "createPath",
    value: function createPath(context) {
      var attrs = this.get('attrs');
      var x = attrs.x,
        y = attrs.y,
        r = attrs.r;
      context.beginPath();
      context.arc(x, y, r, 0, Math.PI * 2, false);
      context.closePath();
    }
  }, {
    key: "calculateBox",
    value: function calculateBox() {
      var attrs = this.get('attrs');
      var x = attrs.x,
        y = attrs.y,
        r = attrs.r;
      return {
        minX: x - r,
        maxX: x + r,
        minY: y - r,
        maxY: y + r
      };
    }
  }]);
  return Circle;
}(Shape);
export default Circle;