import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _get from "@babel/runtime/helpers/esm/get";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import Shape from './shape';
import { getBBoxFromPoints } from '../../util/bbox';
var Polygon = /*#__PURE__*/function (_Shape) {
  _inherits(Polygon, _Shape);
  var _super = _createSuper(Polygon);
  function Polygon() {
    _classCallCheck(this, Polygon);
    return _super.apply(this, arguments);
  }
  _createClass(Polygon, [{
    key: "_initProperties",
    value: function _initProperties() {
      _get(_getPrototypeOf(Polygon.prototype), "_initProperties", this).call(this);
      this._attrs.canFill = true;
      this._attrs.canStroke = true;
      this._attrs.type = 'polygon';
    }
  }, {
    key: "getDefaultAttrs",
    value: function getDefaultAttrs() {
      return {
        points: null,
        lineWidth: 0
      };
    }
  }, {
    key: "createPath",
    value: function createPath(context) {
      var attrs = this.get('attrs');
      var points = attrs.points;
      context.beginPath();
      for (var i = 0, len = points.length; i < len; i++) {
        var point = points[i];
        if (i === 0) {
          context.moveTo(point.x, point.y);
        } else {
          context.lineTo(point.x, point.y);
        }
      }
      context.closePath();
    }
  }, {
    key: "calculateBox",
    value: function calculateBox() {
      var attrs = this.get('attrs');
      var points = attrs.points;
      return getBBoxFromPoints(points);
    }
  }]);
  return Polygon;
}(Shape);
export default Polygon;