import Element, { ElementProp } from '../element';
import { ShapeAttrs } from '../../types';
export interface ShapeProp extends ElementProp {
    attrs?: ShapeAttrs;
}
declare class Shape<T extends ShapeProp = ShapeProp> extends Element<T> {
    static Rect: any;
    static Image: any;
    static Circle: any;
    static Line: any;
    static Polygon: any;
    static Polyline: any;
    static Arc: any;
    static Sector: any;
    static Text: any;
    static Custom: any;
    static Marker: any;
    _initProperties(): void;
    getType(): string;
    drawInner(context: any): void;
    getBBox(): {
        x: number;
        y: number;
        minX: number;
        maxX: number;
        minY: number;
        maxY: number;
        width: number;
        height: number;
    };
    calculateBox(): any;
    protected createPath(_context: any): void;
}
export default Shape;
